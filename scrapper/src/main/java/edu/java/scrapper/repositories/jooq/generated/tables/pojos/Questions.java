/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.repositories.jooq.generated.tables.pojos;

import jakarta.validation.constraints.NotNull;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import javax.annotation.processing.Generated;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Questions implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Integer linkId;
    private Integer answerCount;

    public Questions() {
    }

    public Questions(Questions value) {
        this.id = value.id;
        this.linkId = value.linkId;
        this.answerCount = value.answerCount;
    }

    @ConstructorProperties({"id", "linkId", "answerCount"})
    public Questions(
        Long id,
        Integer linkId,
        Integer answerCount
    ) {
        this.id = id;
        this.linkId = linkId;
        this.answerCount = answerCount;
    }

    /**
     * Getter for <code>QUESTIONS.ID</code>.
     */
    @NotNull
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>QUESTIONS.ID</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>QUESTIONS.LINK_ID</code>.
     */
    public Integer getLinkId() {
        return this.linkId;
    }

    /**
     * Setter for <code>QUESTIONS.LINK_ID</code>.
     */
    public void setLinkId(Integer linkId) {
        this.linkId = linkId;
    }

    /**
     * Getter for <code>QUESTIONS.ANSWER_COUNT</code>.
     */
    @NotNull
    public Integer getAnswerCount() {
        return this.answerCount;
    }

    /**
     * Setter for <code>QUESTIONS.ANSWER_COUNT</code>.
     */
    public void setAnswerCount(Integer answerCount) {
        this.answerCount = answerCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Questions other = (Questions) obj;
        if (this.id == null) {
            if (other.id != null) {
                return false;
            }
        } else if (!this.id.equals(other.id)) {
            return false;
        }
        if (this.linkId == null) {
            if (other.linkId != null) {
                return false;
            }
        } else if (!this.linkId.equals(other.linkId)) {
            return false;
        }
        if (this.answerCount == null) {
            if (other.answerCount != null) {
                return false;
            }
        } else if (!this.answerCount.equals(other.answerCount)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.linkId == null) ? 0 : this.linkId.hashCode());
        result = prime * result + ((this.answerCount == null) ? 0 : this.answerCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Questions (");

        sb.append(id);
        sb.append(", ").append(linkId);
        sb.append(", ").append(answerCount);

        sb.append(")");
        return sb.toString();
    }
}
